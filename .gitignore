# Created by .ignore support plugin (hsz.mobi)
### Rust template
# Generated by Cargo
# will have compiled files and executables
target/
.idea/
# repositories used for local testing
/tests/fixtures/repos
$/tests/fixtures/repos/

/tests/fixtures/commit-graphs/
$/tests/fixtures/commit-graphs/

**/generated-do-not-edit/

# Cargo lock files of fuzz targets - let's have the latest versions of everything under test
**/fuzz/Cargo.lock

# Main Cargo.lock - let's ignore it to allow for dependency updates
Cargo.lock

# newer Git sees these as precious, older Git falls through to the pattern above
$**/fuzz/Cargo.lock

# Instead of adding more environment-specific ignores here, like for the IDE in use, prefer Git's user-global
# `core.excludesFile` mechanism, see https://git-scm.com/docs/git-config#Documentation/git-config.txt-coreexcludesFile.
## Directory-based project format
# if you remove the above rule, at least ignore user-specific stuff:
.idea/workspace.xml
.idea/tasks.xml
# and these sensitive or high-churn files:
.idea/dataSources.ids
.idea/dataSources.xml
.idea/sqlDataSources.xml
.idea/dynamic.xml
logs.txt
## File-based project format
*.ipr
*.iml
*.iws
.env
# General cache directory
.cache/
cache/
## Log files
/logs
*.log
## Database
instance/
## Virtual Environment
venv/
./venv
.venv/
./.venv

## back up files
backups/*

## uploads files
uploads/*

## Additional for IntelliJ
out/

# generated by mpeltonen/sbt-idea plugin
.idea_modules/

# generated by JIRA plugin
atlassian-ide-plugin.xml

# generated by Crashlytics plugin (for Android Studio and Intellij)
com_crashlytics_export_strings.xml


### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

.claude/
claude.md
**/.claude/settings.local.json

**/CLAUDE.local.md
